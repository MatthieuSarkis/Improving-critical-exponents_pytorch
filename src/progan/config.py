import torch

START_TRAIN_AT_IMG_SIZE = 4
LOGS_PATH = "saved_models/progan/"
LOAD_CHECKPOINT_GEN_PATH = "generator.pt"
LOAD_CHECKPOINT_CRITIC_PATH = "critic.pt"
DEVICE = "cuda" if torch.cuda.is_available() else "cpu"
SAVE_MODEL = True
LOAD_MODEL = False
DATASET_SIZE = 100
LEARNING_RATE = 1e-3
BATCH_SIZES = [32, 32, 16, 16, 8, 4]
FACTORS = [1, 1/2, 1/4, 1/8, 1/16, 1/32]
CHANNELS_IMG = 1
Z_DIM = 256
IN_CHANNELS = 256
LAMBDA_GP = 10
PROGRESSIVE_EPOCHS = [50] * len(FACTORS)
FIXED_NOISE = torch.randn(8, Z_DIM, 1, 1).to(DEVICE)
NUM_WORKERS = 4
PERCOLATION_CRITICAL_CONTROL_PARAMETER = 0.5928